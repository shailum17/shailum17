# .github/workflows/metrics.yml
name: Generate GitHub Profile Visuals

on:
  schedule: [{cron: "0 0 * * *"}] # Runs daily at midnight UTC (5:30 AM IST)
  workflow_dispatch: # Allows manual trigger from GitHub Actions tab
  push: {branches: ["main", "master"]} # Optional: Trigger on push to main/master

jobs:
  build-github-profile-visuals:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed to commit the generated files

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 1: Generate 3D GitHub Contribution Graph
      - name: Generate 3D Contributions
        uses: shailum17/github-profile-3d-contrib@0.1.5 # Using a specific version for stability
        with:
          USERNAME: ${{ github.event.repository.owner.login }}
          OUTPUT_PATH: output/3d-contributions.gif # Output path for the GIF
          MAX_REPOS: 100 # Adjust if you have many repos, helps with performance
          # Theme options (choose one or customize)
          # See https://github.com/yoshi389111/github-profile-3d-contrib for more options
          # COLOR_GRADIENT: "#007bff,#6610f2" # Example gradient
          # BASE_COLOR: "0x2e3440" # Nord Dark Base
          # FONT_COLOR: "0xffffff" # White font color
          # For a darker theme, you might use colors from tokyonight or similar palettes.
          BACKGROUND_COLOR: "0x161b22" # Dark background, similar to GitHub Dark
          CONTRIB_COLOR: "0x238636" # GitHub green for contributions
          LINE_COLOR: "0x30363d" # Dark line color
          # DURATION: 10 # GIF duration in seconds
          # FPS: 20 # Frames per second

      # Step 2: Generate Detailed Language Breakdown (using lowlighter/metrics)
      - name: Generate Language Metrics
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          user: ${{ github.event.repository.owner.login }}
          base: "" # No base section for this specific metric
          plugin_languages: yes
          plugin_languages_sections: most-used, recently-used
          plugin_languages_threshold: 0%
          plugin_languages_details: bytes-size, percentage, lines
          plugin_languages_limit: 8
          plugin_languages_other: yes
          config_timezone: Asia/Kolkata
          config_units: metric
          config_octicon: yes
          config_animated: yes
          config_icons: yes
          config_font: monospace
          config_variants: dark:tokyonight # Ensure this theme matches your preference
          output_dir: output
          filename: metrics-languages.svg

      # Step 3: Generate Most Used Topics (using lowlighter/metrics)
      - name: Generate Topics Metrics
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          user: ${{ github.event.repository.owner.login }}
          base: ""
          plugin_topics: yes
          plugin_topics_limit: 10
          config_timezone: Asia/Kolkata
          config_units: metric
          config_octicon: yes
          config_animated: yes
          config_icons: yes
          config_font: monospace
          config_variants: dark:tokyonight
          output_dir: output
          filename: metrics-topics.svg

      # Step 4: Generate GitHub Achievements / Trophies (using lowlighter/metrics)
      - name: Generate Achievements Metrics
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          user: ${{ github.event.repository.owner.login }}
          base: ""
          plugin_achievements: yes
          plugin_achievements_threshold: C
          plugin_achievements_secrets: yes
          config_timezone: Asia/Kolkata
          config_units: metric
          config_octicon: yes
          config_animated: yes
          config_icons: yes
          config_font: monospace
          config_variants: dark:tokyonight
          output_dir: output
          filename: metrics-achievements.svg

      # Final Step: Commit generated files
      - name: Commit generated files
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git add output/*.gif output/*.svg # Add both GIF and SVG files
          git commit -m "âœ¨ Update GitHub 3D Contrib & Metrics" || echo "No changes to commit"
          git push
